variables:
  OSDU_GCP_ENABLE_BOOTSTRAP: "true"
  OSDU_GCP_SERVICE: partition
  OSDU_GCP_VENDOR: gcp
  OSDU_GCP_HELM_ENV_DIR: "devops/gcp/tests/env"
  ENV_BUILD_PATH: "devops/gcp/tests/build/Dockerfile"

.common_cleanup:
  script:
    - git clone https://community.opengroup.org/osdu/platform/deployment-and-operations/infra-gcp-provisioning.git
    - cp infra-gcp-provisioning/tools/datastore-cleanup/* devops/gcp/tests/clean_up/

osdu-gcp-containerize-bootstrap-env-gitlab:
  stage: build
  image: docker:19.03.15
  tags: ["osdu-small"]
  services:
    - docker:20.10.7-dind
  variables:
    BUILD_BOOTSTRAP_PATH: "devops/gcp/tests/build/Dockerfile"
  script:
    - export EXTRA_DOCKER_TAG=""
    - >
      if [[ "$CI_COMMIT_TAG" != "" ]];
      then EXTRA_DOCKER_TAG="-t $CI_REGISTRY_IMAGE/$IMAGE_BOOTSTRAP_NAME-env:$CI_COMMIT_TAG";
      elif [[ "$CI_COMMIT_REF_NAME" = "$CI_DEFAULT_BRANCH" ]];
      then EXTRA_DOCKER_TAG="-t $CI_REGISTRY_IMAGE/$IMAGE_BOOTSTRAP_NAME-env:latest"; fi
    - docker build -t $CI_REGISTRY_IMAGE/$IMAGE_BOOTSTRAP_NAME-env:$CI_COMMIT_SHORT_SHA $EXTRA_DOCKER_TAG -f $BUILD_BOOTSTRAP_PATH .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/$IMAGE_BOOTSTRAP_NAME-env
  rules:
    - if: "$OSDU_GCP == '1' && $OSDU_GCP_ENABLE_BOOTSTRAP == 'true'"
      when: on_success

osdu-gcp-anthos-deploy-test-env: #infra deploy for on-prem install
  environment:
    name: GCP
  extends: .osdu-gcp-anthos-variables
  tags: ["osdu-small"]
  image: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
  stage: deploy
  needs: ["osdu-gcp-containerize-bootstrap-env-gitlab", "compile-and-unit-test"]
  retry: 1
  variables:
    OSDU_GCP_HELM_NAMESPACE: partition-int-test
  script:
    - gcloud auth activate-service-account --key-file $OSDU_GCP_ANTHOS_DEPLOY_FILE
    - !reference [.common_config, script]
    - export PASSWORD=$(</dev/urandom tr -dc _A-Z-a-z-0-9 | head -c10)
    - cd $OSDU_GCP_HELM_ENV_DIR
    - helm dependency update
    - >
      helm upgrade $OSDU_GCP_SERVICE-env .
      --install
      --create-namespace
      --namespace=$OSDU_GCP_HELM_NAMESPACE
      --wait
      --history-max=3
      --set postgresql.global.postgresql.auth.postgresPassword=$PASSWORD
      --set bootstrap.postgres.image=$CI_REGISTRY_IMAGE/osdu-gcp-bootstrap-$OSDU_GCP_SERVICE-env:$CI_COMMIT_SHORT_SHA
      $OSDU_GCP_HELM_TIMEOUT
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^release/"
      when: never
    - if: "$CI_COMMIT_TAG"
      when: never
    - if: '$OSDU_GCP == "1"'
      when: on_success

osdu-gcp-anthos-deploy-deployment: # reuse common deploy job for test deployment
  needs: ["osdu-gcp-anthos-deploy-test-env", "osdu-gcp-containerize-gitlab"]
  variables:
    OSDU_GCP_HELM_NAMESPACE: partition-int-test
    ISTIO_ENABLED: "false"
    OSDU_GCP_TENANT: test

osdu-gcp-anthos-test:
  variables:
    OSDU_GCP_VENDOR: anthos
    PARTITION_BASE_URL: https://test.ref.gcp.gnrg-osdu.projects.epam.com/

osdu-gcp-anthos-cleanup-env: # clean-up env after tests
  environment:
    name: GCP
  stage: cleanup
  extends: .osdu-gcp-anthos-variables
  image: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
  needs: [osdu-gcp-anthos-test]
  tags: ["osdu-small"]
  variables:
    PARTITION_NAMESPACE: partition-test
    OSDU_GCP_HELM_NAMESPACE: partition-int-test
  script:
    - gcloud auth activate-service-account --key-file $OSDU_GCP_ANTHOS_DEPLOY_FILE
    - !reference [.common_config, script]
    - export GOOGLE_APPLICATION_CREDENTIALS="$OSDU_GCP_ANTHOS_DEPLOY_FILE"
    - !reference [.common_cleanup, script]
    - chmod +x devops/gcp/tests/clean_up/clean_up.sh && devops/gcp/tests/clean_up/clean_up.sh --cluster
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^release/"
      when: never
    - if: "$CI_COMMIT_TAG"
      when: never
    - if: '$OSDU_GCP == "1"'
      when: always

osdu-gcp-anthos-deploy: # verified deploy after tests
  environment:
    name: GCP
  extends: .osdu-gcp-anthos-variables
  tags: ["osdu-small"]
  image: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
  stage: verified-deploy
  needs: ["osdu-gcp-anthos-test"]
  retry: 1
  script:
    - gcloud auth activate-service-account --key-file $OSDU_GCP_ANTHOS_DEPLOY_FILE
    - !reference [.common_config, script]
    - >
      helm upgrade $OSDU_GCP_SERVICE-deploy $OSDU_GCP_HELM_DEPLOYMENT_DIR
      --install
      --create-namespace
      --namespace=$OSDU_GCP_HELM_NAMESPACE
      --wait
      --history-max=3
      --set data.bootstrapImage=$CI_REGISTRY_IMAGE/osdu-gcp-bootstrap-$OSDU_GCP_SERVICE:$CI_COMMIT_SHORT_SHA
      --set data.bootstrapServiceAccountName=$OSDU_GCP_BOOTSTRAP_SA
      --set data.image=$CI_REGISTRY_IMAGE/osdu-gcp-$OSDU_GCP_SERVICE:$CI_COMMIT_SHORT_SHA
      --set data.serviceAccountName=$OSDU_GCP_SERVICE
      --set data.bucketPrefix=osdu-anthos
      --set data.dataPartitionId=$OSDU_GCP_TENANT
      --set data.logLevel=INFO
      --set data.springProfilesActive=anthos
      --set conf.cicdEnabled=true
      --set conf.publicAvailable=true
      --set conf.onPremEnabled=true
      --set conf.domain=$OSDU_GCP_DOMAIN
      $OSDU_GCP_HELM_TIMEOUT
    - !reference [.verify_deploy, script]
    - !reference [.verify_bootstrap, script]
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^release/"
      when: never
    - if: "$CI_COMMIT_TAG"
      when: never
    - if: '$OSDU_GCP == "1"'
      when: on_success

osdu-gcp-deploy-deployment: # reuse common deploy job for test deployment
  variables:
    OSDU_GCP_HELM_NAMESPACE: partition-int-test
    DATA_PARTITION_ID: test
    OSDU_GCP_PARTITION_NAMESPACE: partition-test

osdu-gcp-test:
  variables:
    CLIENT_TENANT: test
    PARTITION_BASE_URL: https://test.community.gcp.gnrg-osdu.projects.epam.com/

osdu-gcp-cleanup-env: # clean-up env after tests
  environment:
    name: GCP
  stage: cleanup
  extends: .osdu-gcp-variables
  image: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
  needs: [osdu-gcp-test]
  tags: ["osdu-small"]
  variables:
    PARTITION_NAMESPACE: partition-test
    OSDU_GCP_HELM_NAMESPACE: partition-int-test
  script:
    - gcloud auth activate-service-account --key-file $OSDU_GCP_DEPLOY_FILE
    - !reference [.common_config, script]
    - export GOOGLE_APPLICATION_CREDENTIALS="$OSDU_GCP_DEPLOY_FILE"
    - !reference [.common_cleanup, script]
    - chmod +x devops/gcp/tests/clean_up/clean_up.sh && devops/gcp/tests/clean_up/clean_up.sh --all
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^release/"
      when: never
    - if: "$CI_COMMIT_TAG"
      when: never
    - if: '$OSDU_GCP == "1"'
      when: always

osdu-gcp-deploy: # verified deploy after tests
  environment:
    name: GCP
  extends: .osdu-gcp-variables
  tags: ["osdu-small"]
  image: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
  stage: verified-deploy
  needs: ["osdu-gcp-test"]
  retry: 1
  script:
    - gcloud auth activate-service-account --key-file $OSDU_GCP_DEPLOY_FILE
    - !reference [.common_config, script]
    - >
      helm upgrade $OSDU_GCP_SERVICE-deploy $OSDU_GCP_HELM_DEPLOYMENT_DIR
      --install
      --create-namespace
      --namespace=$OSDU_GCP_HELM_NAMESPACE
      --wait
      --history-max=3
      --set data.bootstrapImage=$CI_REGISTRY_IMAGE/osdu-gcp-bootstrap-$OSDU_GCP_SERVICE:$CI_COMMIT_SHORT_SHA
      --set data.bootstrapServiceAccountName=$BOOTSTRAP_SA
      --set data.image=$CI_REGISTRY_IMAGE/osdu-gcp-$OSDU_GCP_SERVICE:$CI_COMMIT_SHORT_SHA
      --set data.serviceAccountName=$OSDU_GCP_SERVICE-k8s
      --set data.projectId=$OSDU_GCP_PROJECT
      --set data.partitionAdminAccounts=$OSDU_GCP_PARTITION_ADMIN_ACCOUNTS
      --set data.dataPartitionId=$OSDU_GCP_TENANT
      --set data.logLevel=INFO
      --set conf.domain=$OSDU_GCP_DOMAIN
      $OSDU_GCP_HELM_TIMEOUT
    - !reference [.verify_deploy, script]
    - !reference [.verify_bootstrap, script]
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^release/"
      when: never
    - if: "$CI_COMMIT_TAG"
      when: never
    - if: '$OSDU_GCP == "1"'
      when: on_success

osdu-gcp-dev2-deploy-deployment: # reuse common deploy job for test deployment
  variables:
    OSDU_GCP_HELM_NAMESPACE: partition-int-test
    DATA_PARTITION_ID: test
    OSDU_GCP_PARTITION_NAMESPACE: partition-test

osdu-gcp-dev2-test:
  variables:
    CLIENT_TENANT: test
    PARTITION_BASE_URL: https://test.dev2.gcp.gnrg-osdu.projects.epam.com/

osdu-gcp-dev2-cleanup-env: # clean-up env after tests
  environment:
    name: GCP
  stage: cleanup
  extends: .osdu-gcp-dev2-variables
  image: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
  needs: [osdu-gcp-dev2-test]
  tags: ["osdu-small"]
  variables:
    PARTITION_NAMESPACE: partition-test
    OSDU_GCP_HELM_NAMESPACE: partition-int-test
  script:
    - gcloud auth activate-service-account --key-file $OSDU_GCP_DEPLOY_FILE
    - !reference [.common_config, script]
    - export GOOGLE_APPLICATION_CREDENTIALS="$OSDU_GCP_DEPLOY_FILE"
    - !reference [.common_cleanup, script]
    - chmod +x devops/gcp/tests/clean_up/clean_up.sh && devops/gcp/tests/clean_up/clean_up.sh --all
  rules:
    - if: '$OSDU_GCP == "1" && $CI_COMMIT_BRANCH =~ /^release/'
      when: always
    - if: '$OSDU_GCP == "1" && $CI_COMMIT_TAG'
      when: always

osdu-gcp-dev2-deploy: # verified deploy after tests
  tags: ["osdu-small"]
  extends: .osdu-gcp-dev2-variables
  image: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
  stage: verified-deploy
  needs: ["osdu-gcp-containerize-gitlab", "osdu-gcp-dev2-test"]
  retry: 1
  script:
    - gcloud auth activate-service-account --key-file $OSDU_GCP_DEV2_DEPLOY_FILE
    - !reference [.common_config, script]
    - !reference [.define_version, script]
    - helm repo add $OSDU_GCP_SERVICE ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/stable
    - >
      helm upgrade $OSDU_GCP_SERVICE-deploy $OSDU_GCP_SERVICE/gcp-$OSDU_GCP_SERVICE-deploy
      --version $VERSION
      --install
      --create-namespace
      --namespace=$OSDU_GCP_HELM_NAMESPACE
      --wait
      --history-max=3
      --set data.imagePullPolicy=Always
      --set data.bootstrapImage=$CI_REGISTRY_IMAGE/osdu-gcp-bootstrap-$OSDU_GCP_SERVICE:${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
      --set data.bootstrapServiceAccountName=datafier-k8s
      --set data.image=$CI_REGISTRY_IMAGE/osdu-gcp-$OSDU_GCP_SERVICE:${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
      --set data.serviceAccountName=$OSDU_GCP_SERVICE-k8s
      --set data.projectId=osdu-dev2
      --set data.partitionAdminAccounts=$OSDU_GCP_DEV2_PARTITION_ADMIN_ACCOUNTS
      --set data.dataPartitionId=$OSDU_GCP_TENANT
      --set data.logLevel=INFO
      --set conf.domain=$OSDU_GCP_DOMAIN
      $OSDU_GCP_HELM_TIMEOUT
    - !reference [.verify_deploy, script]
    - !reference [.verify_bootstrap, script]
  rules:
    - if: '$OSDU_GCP == "1" && $CI_COMMIT_BRANCH =~ /^release/'
      when: on_success
    - if: '$OSDU_GCP == "1" && $CI_COMMIT_TAG'
      when: on_success

osdu-gcp-preship-deploy-deployment:
  extends: .osdu-gcp-preship-variables
  tags: ["osdu-small"]
  image: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
  stage: deploy_preship
  needs: ["osdu-gcp-dev2-deploy", "osdu-gcp-dev2-test"]
